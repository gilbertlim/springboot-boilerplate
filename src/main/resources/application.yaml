server:
  shutdown: graceful

spring:
  profiles.active: local
  application:
    name: shop
  base-package: com.boilerplate

  lifecycle.timeout-per-shutdown-phase: 1m

  datasource:
    reader:
      url: jdbc:log4jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      username: root
      password: 1234
    writer:
      url: jdbc:log4jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      username: root
      password: 1234
      hikari:
        minimum-idle: 10
        maximum-pool-size: 10

    hikari:
      minimum-idle: 20
      maximum-pool-size: 20
      connection-timeout: 2700
      validation-timeout: 2100
      leak-detection-threshold: 59000
      max-lifetime: 60000
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 500
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        rewriteBatchedStatements: true  #saveAll ?? ??

  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: localhost:9092
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  data:
    redis:
      host: localhost
      #cluster:
      #  nodes: localhost
      timeout: 500ms
      connect-timeout: 200ms
      lettuce:
        pool:
          min-idle: 8

mybatis:
  base-package: ${spring.base-package}.*.infrastructure.provider.mybatis
  type-handlers-packages:
    - ${mybatis.base-package}.typehandler
  type-aliases-packages:
    - ${spring.base-package}.*.domain
    - ${spring.base-package}.*.application.dto.response.query

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}][%X{userId:-}][%X{userIp:-}]"
  level:
    #root: info
    com.boilerplate: debug
    com.boilerplate.feign: debug
    org.springframework.web: info
    jdbc:
      sqlonly: debug
      sqltiming: debug
      resultsettable: debug
      audit: off
      resultset: off
      connection: off

management:
  endpoints:
    web:
      exposure:
        include: health, prometheus
  tracing:
    sampling:
      probability: 1.0 # 모든 tracing 기록
  server:
    port: 8081
#  # prometheus http_server_requests_seconds_bucket metric 활성화
#  metrics:
#    distribution:
#      percentiles-histogram:
#        http:
#          server:
#            requests: true