plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.megazone'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = '2022.0.3'
    mybatisVersion = '3.0.2'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly 'com.h2database:h2'
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:$mybatisVersion"
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // tracer dependency
    implementation 'io.micrometer:micrometer-tracing-bridge-brave' // tracer
    implementation 'io.micrometer:micrometer-registry-prometheus' // for prometheus metrics
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:$mybatisVersion"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/java", "src/main/resources"]
            include "**/*.xml"
        }
    }
}

task copyResourcesMain(type: Copy) {
    from(sourceSets.main.resources.srcDirs) {
        exclude("**/*.java")
    }
    into("build/classes/java/main")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.compileJava.dependsOn(copyResourcesMain)

bootJar {
    archiveFileName = 'application.jar'
}
